(0.000000) CudaRuntime.cpp:3813: Adding external function 'malloc'
(0.000000) CudaRuntime.cpp:3813: Adding external function 'free'
(0.000000) CudaRuntime.cpp:3813: Adding external function 'vprintf'
(0.000000) CudaRuntime.cpp:3813: Adding external function 'cudaGetParameterBuffer'
(0.000060) CudaRuntime.cpp:595:  Loading module (fatbin) - vectorAdd.cu
(0.000080) CudaRuntime.cpp:738:  Registered kernel - _Z6vecAddPdS_S_i in module 'vectorAdd.cu'
(0.000118) CudaRuntime.cpp:276:  Creating devices.
(0.000253) CudaRuntime.cpp:288:   - Added 1 emulator devices.
(0.000409) CudaRuntime.cpp:446:  Creating new context for thread 0x23a4df0
(0.000476) CudaRuntime.cpp:787:  cudaMalloc( *devPtr = 0x23a7100, size = 8000)
(0.000496) CudaRuntime.cpp:787:  cudaMalloc( *devPtr = 0x23a9100, size = 8000)
(0.000511) CudaRuntime.cpp:787:  cudaMalloc( *devPtr = 0x23ab500, size = 8000)
(0.001012) CudaRuntime.cpp:1131: cudaMemcpy(0x23a7100, 0x239e930, 8000)
(0.001022) CudaRuntime.cpp:251:    _memcpy(0x23a7100, 0x239e930, 8000 bytes) h-to-d
(0.001039) CudaRuntime.cpp:1131: cudaMemcpy(0x23a9100, 0x23a0880, 8000)
(0.001047) CudaRuntime.cpp:251:    _memcpy(0x23a9100, 0x23a0880, 8000 bytes) h-to-d
(0.001061) CudaRuntime.cpp:1131: cudaMemcpy(0x23ab500, 0x23a27d0, 8000)
(0.001069) CudaRuntime.cpp:251:    _memcpy(0x23ab500, 0x23a27d0, 8000 bytes) h-to-d
(0.001086) CudaRuntime.cpp:2609: cudaConfigureCall()
(0.001096) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 0, size 8
(0.001105) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 8, size 8
(0.001114) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 16, size 8
(0.001122) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 24, size 4
(0.002746) CudaRuntime.cpp:142:  Mapping parameter at offset 0 of size 8 to offset 0 of size 8
   data = 0x00 0x71 0x3a 0x02 0x00 0x00 0x00 0x00 
(0.002758) CudaRuntime.cpp:142:  Mapping parameter at offset 8 of size 8 to offset 8 of size 8
   data = 0x00 0x91 0x3a 0x02 0x00 0x00 0x00 0x00 
(0.002766) CudaRuntime.cpp:142:  Mapping parameter at offset 16 of size 8 to offset 16 of size 8
   data = 0x00 0xb5 0x3a 0x02 0x00 0x00 0x00 0x00 
(0.002773) CudaRuntime.cpp:142:  Mapping parameter at offset 24 of size 4 to offset 24 of size 4
   data = 0xe8 0x03 0x00 0x00 
(0.002780) CudaRuntime.cpp:2685: kernel launch (_Z6vecAddPdS_S_i) on thread 0x23a4df0
(0.002800) CudaRuntime.cpp:2706:  launch completed successfully
all enabled
(0.003600) X86TraceGenerator.cpp:776:  New kernel launched
(0.003623) X86TraceGenerator.cpp:777:  compute version:2.0
(0.003631) X86TraceGenerator.cpp:778:  grid  1 x 1 x 1
(0.003641) X86TraceGenerator.cpp:779:  block 1024 x 1 x 1
(0.003649) X86TraceGenerator.cpp:780:  number of warps per block:32
(0.003656) X86TraceGenerator.cpp:781:  number of total warps:32
(0.003663) X86TraceGenerator.cpp:782:  # threads per block : 1024
(0.003670) X86TraceGenerator.cpp:783:  number of register per thread:14
(0.003678) X86TraceGenerator.cpp:784:  number of shared memory per thread:0
(0.003687) X86TraceGenerator.cpp:822:  max blocks per core : 1
(0.008057) X86TraceGenerator.cpp:1082: mkdir -p /benchrun/macsim/vectoradd/sm6_gtx1080/input-1000/results/traces/_Z6vecAddPdS_S_i_0/ (status 0)

(0.008137) X86TraceGenerator.cpp:1083: errno is 0 message is Success

(0.043234) CudaRuntime.cpp:1131: cudaMemcpy(0x23a27d0, 0x23ab500, 8000)
(0.043258) CudaRuntime.cpp:215:    _memcpy(0x23a27d0, 0x23ab500, 8000 bytes) d-to-h
Final sum = 1000.000000; sum/n = 1.000000 (should be ~1)
(0.043296) CudaRuntime.cpp:887:  cudaFree(0x23a7100)
(0.043317) CudaRuntime.cpp:887:  cudaFree(0x23a9100)
(0.043327) CudaRuntime.cpp:887:  cudaFree(0x23ab500)
(0.043921) X86TraceGenerator.cpp:725:  destructor
(0.044178) X86TraceGenerator.cpp:2259: finalize
(0.044189) X86TraceGenerator.cpp:2263: total instruction count: 25
