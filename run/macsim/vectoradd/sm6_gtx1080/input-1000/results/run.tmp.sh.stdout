(0.000000) CudaRuntime.cpp:3813: Adding external function 'malloc'
(0.000000) CudaRuntime.cpp:3813: Adding external function 'free'
(0.000000) CudaRuntime.cpp:3813: Adding external function 'vprintf'
(0.000000) CudaRuntime.cpp:3813: Adding external function 'cudaGetParameterBuffer'
(0.000031) CudaRuntime.cpp:595:  Loading module (fatbin) - vectorAdd.cu
(0.000040) CudaRuntime.cpp:738:  Registered kernel - _Z6vecAddPdS_S_i in module 'vectorAdd.cu'
(0.000059) CudaRuntime.cpp:276:  Creating devices.
(0.000138) CudaRuntime.cpp:288:   - Added 1 emulator devices.
(0.000242) CudaRuntime.cpp:446:  Creating new context for thread 0x11e2df0
(0.000267) CudaRuntime.cpp:787:  cudaMalloc( *devPtr = 0x11e5100, size = 8000)
(0.000276) CudaRuntime.cpp:787:  cudaMalloc( *devPtr = 0x11e7100, size = 8000)
(0.000283) CudaRuntime.cpp:787:  cudaMalloc( *devPtr = 0x11e9500, size = 8000)
(0.000473) CudaRuntime.cpp:1131: cudaMemcpy(0x11e5100, 0x11dc930, 8000)
(0.000479) CudaRuntime.cpp:251:    _memcpy(0x11e5100, 0x11dc930, 8000 bytes) h-to-d
(0.000486) CudaRuntime.cpp:1131: cudaMemcpy(0x11e7100, 0x11de880, 8000)
(0.000490) CudaRuntime.cpp:251:    _memcpy(0x11e7100, 0x11de880, 8000 bytes) h-to-d
(0.000496) CudaRuntime.cpp:1131: cudaMemcpy(0x11e9500, 0x11e07d0, 8000)
(0.000500) CudaRuntime.cpp:251:    _memcpy(0x11e9500, 0x11e07d0, 8000 bytes) h-to-d
(0.000508) CudaRuntime.cpp:2609: cudaConfigureCall()
(0.000513) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 0, size 8
(0.000518) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 8, size 8
(0.000521) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 16, size 8
(0.000525) CudaRuntime.cpp:2631: cudaSetupArgument() - offset 24, size 4
(0.001419) CudaRuntime.cpp:142:  Mapping parameter at offset 0 of size 8 to offset 0 of size 8
   data = 0x00 0x51 0x1e 0x01 0x00 0x00 0x00 0x00 
(0.001428) CudaRuntime.cpp:142:  Mapping parameter at offset 8 of size 8 to offset 8 of size 8
   data = 0x00 0x71 0x1e 0x01 0x00 0x00 0x00 0x00 
(0.001433) CudaRuntime.cpp:142:  Mapping parameter at offset 16 of size 8 to offset 16 of size 8
   data = 0x00 0x95 0x1e 0x01 0x00 0x00 0x00 0x00 
(0.001438) CudaRuntime.cpp:142:  Mapping parameter at offset 24 of size 4 to offset 24 of size 4
   data = 0xe8 0x03 0x00 0x00 
(0.001443) CudaRuntime.cpp:2685: kernel launch (_Z6vecAddPdS_S_i) on thread 0x11e2df0
(0.001456) CudaRuntime.cpp:2706:  launch completed successfully
all enabled
(0.002494) X86TraceGenerator.cpp:776:  New kernel launched
(0.002507) X86TraceGenerator.cpp:777:  compute version:2.0
(0.002513) X86TraceGenerator.cpp:778:  grid  1 x 1 x 1
(0.002519) X86TraceGenerator.cpp:779:  block 1024 x 1 x 1
(0.002524) X86TraceGenerator.cpp:780:  number of warps per block:32
(0.002529) X86TraceGenerator.cpp:781:  number of total warps:32
(0.002534) X86TraceGenerator.cpp:782:  # threads per block : 1024
(0.002538) X86TraceGenerator.cpp:783:  number of register per thread:14
(0.002543) X86TraceGenerator.cpp:784:  number of shared memory per thread:0
(0.002549) X86TraceGenerator.cpp:822:  max blocks per core : 1
(0.010165) X86TraceGenerator.cpp:1082: mkdir -p /benchrun/macsim/vectoradd/sm6_gtx1080/input-1000/results/traces/_Z6vecAddPdS_S_i_0/ (status 0)

(0.010199) X86TraceGenerator.cpp:1083: errno is 0 message is Success

(0.031672) CudaRuntime.cpp:1131: cudaMemcpy(0x11e07d0, 0x11e9500, 8000)
(0.031681) CudaRuntime.cpp:215:    _memcpy(0x11e07d0, 0x11e9500, 8000 bytes) d-to-h
Final sum = 1000.000000; sum/n = 1.000000 (should be ~1)
(0.031698) CudaRuntime.cpp:887:  cudaFree(0x11e5100)
(0.031705) CudaRuntime.cpp:887:  cudaFree(0x11e7100)
(0.031707) CudaRuntime.cpp:887:  cudaFree(0x11e9500)
(0.031998) X86TraceGenerator.cpp:725:  destructor
(0.032111) X86TraceGenerator.cpp:2259: finalize
(0.032114) X86TraceGenerator.cpp:2263: total instruction count: 25
